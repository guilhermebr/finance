{
    "swagger": "2.0",
    "info": {
        "description": "A finance management API for tracking accounts, transactions, categories, and balances",
        "title": "Finance API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": ":3000",
    "basePath": "/api/v1",
    "paths": {
        "/accounts": {
            "get": {
                "description": "Retrieve a list of all financial accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get all accounts",
                "responses": {
                    "200": {
                        "description": "Accounts retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.AccountResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new financial account with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "description": "Account data",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account created successfully",
                        "schema": {
                            "$ref": "#/definitions/v1.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/accounts/{id}": {
            "get": {
                "description": "Retrieve a specific account by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get account by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/v1.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing account with new information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Update account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated account data",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "schema": {
                            "$ref": "#/definitions/v1.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an account by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Delete account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Account deleted successfully"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/balances": {
            "get": {
                "description": "Retrieve a list of all account balances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balances"
                ],
                "summary": "Get all balances",
                "responses": {
                    "200": {
                        "description": "Balances retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.BalanceResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/balances/summary": {
            "get": {
                "description": "Retrieve a summary of all account balances including total assets, liabilities, and net worth",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balances"
                ],
                "summary": "Get balance summary",
                "responses": {
                    "200": {
                        "description": "Balance summary retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/v1.BalanceSummaryResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/balances/{accountId}": {
            "get": {
                "description": "Retrieve the balance information for a specific account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balances"
                ],
                "summary": "Get balance by account ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/v1.BalanceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    },
                    "404": {
                        "description": "Balance not found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/balances/{accountId}/refresh": {
            "post": {
                "description": "Recalculate and refresh the balance for a specific account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balances"
                ],
                "summary": "Refresh account balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "accountId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Balance refreshed successfully"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Retrieve a list of all transaction categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get all categories",
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.CategoryResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new transaction category with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "schema": {
                            "$ref": "#/definitions/v1.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Retrieve a specific category by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/v1.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing category with new information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Update category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated category data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "schema": {
                            "$ref": "#/definitions/v1.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Delete category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check if the service is healthy and running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Service is healthy"
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "description": "Retrieve a list of all financial transactions with pagination (limit: 50, offset: 0)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get all transactions",
                "responses": {
                    "200": {
                        "description": "Transactions retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.TransactionResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new financial transaction with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Create a new transaction",
                "parameters": [
                    {
                        "description": "Transaction data",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "schema": {
                            "$ref": "#/definitions/v1.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "description": "Retrieve a specific transaction by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/v1.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing transaction with new information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Update transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated transaction data",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "schema": {
                            "$ref": "#/definitions/v1.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a transaction by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Delete transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Transaction deleted successfully"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponseBody"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.AccountType": {
            "type": "string",
            "enum": [
                "checking",
                "savings",
                "credit",
                "investment",
                "cash"
            ],
            "x-enum-varnames": [
                "AccountTypeChecking",
                "AccountTypeSavings",
                "AccountTypeCredit",
                "AccountTypeInvestment",
                "AccountTypeCash"
            ]
        },
        "entities.CategoryType": {
            "type": "string",
            "enum": [
                "income",
                "expense"
            ],
            "x-enum-varnames": [
                "CategoryTypeIncome",
                "CategoryTypeExpense"
            ]
        },
        "entities.TransactionStatus": {
            "type": "string",
            "enum": [
                "pending",
                "cleared",
                "cancelled"
            ],
            "x-enum-varnames": [
                "TransactionStatusPending",
                "TransactionStatusCleared",
                "TransactionStatusCancelled"
            ]
        },
        "v1.AccountResponse": {
            "type": "object",
            "properties": {
                "asset": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entities.AccountType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "v1.BalanceResponse": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/v1.AccountResponse"
                },
                "account_id": {
                    "type": "string"
                },
                "available_balance": {
                    "type": "string"
                },
                "current_balance": {
                    "type": "string"
                },
                "last_calculated": {
                    "type": "string"
                },
                "pending_balance": {
                    "type": "string"
                }
            }
        },
        "v1.BalanceSummaryResponse": {
            "type": "object",
            "properties": {
                "last_calculated": {
                    "type": "string"
                },
                "net_worth": {
                    "type": "string"
                },
                "total_assets": {
                    "type": "string"
                },
                "total_liabilities": {
                    "type": "string"
                }
            }
        },
        "v1.CategoryResponse": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entities.CategoryType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "v1.CreateAccountRequest": {
            "type": "object",
            "properties": {
                "asset": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entities.AccountType"
                }
            }
        },
        "v1.CreateCategoryRequest": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entities.CategoryType"
                }
            }
        },
        "v1.CreateTransactionRequest": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/entities.TransactionStatus"
                }
            }
        },
        "v1.ErrorResponseBody": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "v1.TransactionResponse": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/v1.AccountResponse"
                },
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "category": {
                    "$ref": "#/definitions/v1.CategoryResponse"
                },
                "category_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/entities.TransactionStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "v1.UpdateAccountRequest": {
            "type": "object",
            "properties": {
                "asset": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entities.AccountType"
                }
            }
        },
        "v1.UpdateCategoryRequest": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entities.CategoryType"
                }
            }
        },
        "v1.UpdateTransactionRequest": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/entities.TransactionStatus"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}